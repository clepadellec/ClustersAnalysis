sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
X=object$df[,-indice]
var_groupe <- object$name_group
y=object$df[[var_groupe]]
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
data_type=function(X){
quali_quanti=sapply(X, FUN = type_variable)
#  quali_quanti=c()
#  n=ncol(X)
#  for (i in 1:n){
#    quali_quanti=c(quali_quanti,type_variable(X[,i]))
#  }
tab=table(quali_quanti)
name=names(tab)
if (length(name)==2){
type="quantitative-qualitative"
} else{
if (name=="quantitative"){
if (tab[[1]]==1){
type='quantitative'
} else{
type='quantitatives'
}
} else{
if (tab[[1]]==1){
type='qualitative'
} else{
type='qualitatives'
}
}
}
return(type)
}
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
X=object$df[,-indice]
var_groupe <- object$name_group
y=object$df[[var_groupe]]
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
type_variable=function(x){
if (class(x)=='character'|length(unique(x))<7){
type=('qualitative')
} else{
type=('quantitative')
}
return(type)
}
data_type=function(X){
quali_quanti=sapply(X, FUN = type_variable)
#  quali_quanti=c()
#  n=ncol(X)
#  for (i in 1:n){
#    quali_quanti=c(quali_quanti,type_variable(X[,i]))
#  }
tab=table(quali_quanti)
name=names(tab)
if (length(name)==2){
type="quantitative-qualitative"
} else{
if (name=="quantitative"){
if (tab[[1]]==1){
type='quantitative'
} else{
type='quantitatives'
}
} else{
if (tab[[1]]==1){
type='qualitative'
} else{
type='qualitatives'
}
}
}
return(type)
}
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
X=object$df[,-indice]
var_groupe <- object$name_group
y=object$df[[var_groupe]]
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
X=object$df[,-indice]
var_groupe <- object$name_group
y=object$df[[var_groupe]]
print(data_type(X))
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
data_type=function(X){
quali_quanti=sapply(X, FUN = type_variable)
#  quali_quanti=c()
#  n=ncol(X)
#  for (i in 1:n){
#    quali_quanti=c(quali_quanti,type_variable(X[,i]))
#  }
tab=table(quali_quanti)
print(tab)
name=names(tab)
if (length(name)==2){
type="quantitative-qualitative"
} else{
if (name=="quantitative"){
if (tab[[1]]==1){
type='quantitative'
} else{
type='quantitatives'
}
} else{
if (tab[[1]]==1){
type='qualitative'
} else{
type='qualitatives'
}
}
}
return(type)
}
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
X=object$df[,-indice]
var_groupe <- object$name_group
y=object$df[[var_groupe]]
print(data_type(X))
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
X=object$df[,-indice]
print(X)
var_groupe <- object$name_group
print(var_groupe)
y=object$df[[var_groupe]]
print(y)
print(data_type(X))
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
silhouette_ind(test)
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= as.integer(object$ind_group_class)
print(indice)
X=object$df[,-indice]
print(X)
var_groupe <- object$name_group
print(var_groupe)
y=object$df[[var_groupe]]
print(y)
print(data_type(X))
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= object$ind_group_class
print(indice)
X=object$df[,-indice]
print(X)
var_groupe <- object$name_group
print(var_groupe)
y=object$df[[var_groupe]]
print(y)
print(data_type(X))
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
silhouette_ind=function(object,rescale=FALSE,d='euclidean'){
indice= object$group
print(indice)
X=object$df[,-indice]
print(X)
var_groupe <- object$name_group
print(var_groupe)
y=object$df[[var_groupe]]
print(y)
print(data_type(X))
if (data_type(X)=="quantitatives"){
X_bis=X
}
if (data_type(X)=="quantitative"){
X_bis=data.frame(X)
}
if (data_type(X)=='quantitative-qualitative'|data_type(X)=='qualitatives'){
X_bis=dummy_data(X,rescale)
}
if (data_type(X)=='qualitative'){
X_bis=dummy_cols(data.frame(X), remove_first_dummy  = F)[,-1]
}
matrice_distance=matrix_distance(X_bis,d)
moyenne_distance=mean_distance(matrice_distance,y)
sil=c()
m=nrow(moyenne_distance)
if (nlevels(y)==1){
sil=rep(-1,m)
} else{
for (i in 1:m){
if (sum(y==y[i])==1){
sil[i]=-1
} else{
a=as.numeric(moyenne_distance[i,][as.character(y[i])])
b=min(as.numeric(moyenne_distance[i,colnames(moyenne_distance)!=as.character(y[i])]))
s=(b-a)/max(a,b)
sil=c(sil,s)
}
}
}
return(sil)
}
test=Univariate_object(data_0,11)
test
silhouette_ind(test)
install.packages("fastDummies")
library(fastDummies)
silhouette_ind(test)
fisher_test_all=function(object){
var_groupe <- object$name_group
data=object$df[ ,object$ind.quan]
g=object$df[[var_groupe]]
n=nrow(data)
K=length(unique(g))
Eta2=apply(data,MARGIN = 2,FUN = function(x){return(eta2(x,g))})
Test_value=(n-K)/(K-1)*(Eta2)/(1-Eta2)
p_value=1-pf(Test_value,K-1,n-K)
df=data.frame('Eta2'=Eta2, 'Test_value'=Test_value, 'p_value'=p_value)
return(df)
}
test=Univariate_object(data_0,11)
test
fisher_test_all(test)
