library(ClustersAnalysis)
installed.packages("ggcorrplot")
library(ggcorrplot)
installed.packages("ggplot2")
library(ggplot2)
installed.packages("ggcorrplot")
install.packages("ggcorrplot")
library(ggcorrplot)
corr <- round(cor(mtcars), 1)
ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE))
ggcorrplot(corr, hc.order = TRUE, type = "lower",lab = TRUE))
ggcorrplot(corr, hc.order = TRUE, type = "lower",lab = TRUE)
viz_corr<- function(df){
corr <- round(cor(df), 1)
return(ggcorrplot(corr, hc.order = TRUE, type = "lower",lab = TRUE))
}
viz_corr(mtcars)
library(ClustersAnalysis)
viz_corr(mtcars)
data=read.csv2("DonnÃ©es-R-1.csv", sep=";", row.names = 1)
View(data)
ind.qual <- sapply(Data, function(x) is.factor(x))
ind.qual <- sapply(data, function(x) is.factor(x))
Data.quant <- Data[ ,ind.qual]
Data.qual <- data[ ,ind.qual]
ind.qual <- sapply(data, function(x) is.factor(x)| is.character(x))
Data.qual <- data[ ,ind.qual]
View(Data.qual)
View(data)
View(Data.qual)
o <- Data.qual[,-Data.qual$Continent]
o <- Data.qual[,-(Data.qual$Continent)]
o <- Data.qual[,colnames(Data.qual)!=Data.qual$Continent]
cc <- colnames(Data.qual)!=Data.qual$Continent
o <- Data.qual[,-(which(colnames(Data.qual) == "Continent"))]
View(o)
cc <- colnames(Data.qual)!="Continent"
cc <- colnames(Data.qual)
cc <- colnames(Data.qual)
cc <- cc[cc!='Continent']
cD <- cc[colnames(Data.qual)!='Continent']
cE <- colnames(Data.qual)[colnames(Data.qual)!='Continent']
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
for (i in 1:length(others_var)){
print(others_var[i])
}
}
chisq_test_all("Continent",Data.qual)
print(data['Continent'])
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<- chisq.test(data[name_var_group],data[others_var[i]])$p.value
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq.test(Data.qual$continent,Data.qual$Region)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(data[others_var[i]])
res[i,3]<- chisq.test(data[name_var_group],data[others_var[i]])$p.value
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(data[others_var[i]])
print(data[name_var_group])
res[i,3]<- chisq.test(data[name_var_group],data[others_var[i]])$p.value
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq.test(Data.qual$Continent,Data.qual$Region)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(data[others_var[i]])
print(data[name_var_group])
print(chisq.test(data[name_var_group],data[others_var[i]]))
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(type(data[others_var[i]]))
print(type(data[name_var_group]))
print(chisq.test(data[name_var_group],data[others_var[i]]))
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(class(data[others_var[i]]))
print(class(data[name_var_group]))
print(chisq.test(data[name_var_group],data[others_var[i]]))
}
print(res)
}
chisq_test_all("Continent",Data.qual)
print(class(ata.qual$Continent))
print(class(Data.qual$Continent))
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(as.character(data[others_var[i]]))
print(as.character(data[name_var_group]))
print(chisq.test(data[name_var_group],data[others_var[i]]))
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(chisq.test(as.character(data[name_var_group]),as.character(data[others_var[i]])))
}
print(res)
}
chisq_test_all("Continent",Data.qual)
test<- "Continent"
Data.qual$test
Data.qual$Continent
class(Data.qual$Continent)
Data.qual["Continent"]
Data.qual["Continent"][,2]
Data.qual["Continent"][,1]
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(chisq.test(data[name_var_group][,1],data[others_var[i]][,1]))
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(chisq.test(data[name_var_group][,1],data[others_var[i]][,1]))$p.value
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(chisq.test(data[name_var_group][,1],data[others_var[i]][,1]))$p-value
}
print(res)
}
chisq_test_all("Continent",Data.qual)
print(chisq.test(data[name_var_group][,1],data[others_var[i]][,1]))$p.value
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
print(chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value)
}
print(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<-chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value
if (res[i,3]<0.05){
res[i,4]<-"significatif"
}else{
res[i,4]<-"non significatif"
}
}
return(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
options(warn=-1)
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<-chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value
if (res[i,3]<0.05){
res[i,4]<-"significatif"
}else{
res[i,4]<-"non significatif"
}
}
return(res)
}
chisq_test_all("Continent",Data.qual)
x <- 2.20730600331155e-58
print(round(x,4))
print(round(x,5))
chisq_test_all <- function(name_var_group,data){
options(warn=-1)
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<-chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value
if (round(res[i,3],5)<0.05){
res[i,4]<-"significatif"
}else{
res[i,4]<-"non significatif"
}
}
return(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
options(warn=-1)
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<-as.numeric(chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value)
if (round(res[i,3],5)<0.05){
res[i,4]<-"significatif"
}else{
res[i,4]<-"non significatif"
}
}
return(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
options(warn=-1)
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<-chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value
if (round(as.numeric(res[i,3]),5)<0.05){
res[i,4]<-"significatif"
}else{
res[i,4]<-"non significatif"
}
}
return(res)
}
chisq_test_all("Continent",Data.qual)
chisq_test_all <- function(name_var_group,data){
options(warn=-1)
others_var <- colnames(data)[colnames(data)!=name_var_group]
res <- matrix(data = NA, nrow = length(others_var), ncol = 4)
for (i in 1:length(others_var)){
res[i,1]<-name_var_group
res[i,2]<-others_var[i]
res[i,3]<-chisq.test(data[name_var_group][,1],data[others_var[i]][,1])$p.value
if (round(as.numeric(res[i,3]),5)<0.05){
res[i,4]<-"significatif"
}else{
res[i,4]<-"non significatif"
}
}
res <- as.data.frame(res)
colnames(res)<-c("var.groupement","var.explicative","p.value.chisq.test","interpretation")
return(res)
}
chisq_test_all("Continent",Data.qual)
library(ClustersAnalysis)
data=read.csv2("DonnÃ©es-R-1.csv", sep=";", row.names = 1)
Data.qual<- ClustersAnalysis::extract_ql(data)
print(Data.qual)
ClustersAnalysis::chisq_test_all("Continent",Data.qual)
ClustersAnalysis::chisq_test_all("Region",Data.qual)
ClustersAnalysis::chisq_test_all("index_quali",Data.qual)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warnings=FALSE)
#setwd('C:/Users/clementlepadellec/Downloads/')
data_0=read.csv2("DonnÃ©es-R-1.csv", sep=";", row.names = 1)
data.qt = data_0[,1:10]
#aper?u des donn?es
print(summary(data_0))
#premier regard sur la corr?lation
cor(data.qt)
plot(data.qt)
#Au premier abord les variables corr?l?es avec l'index semblent ?tre :
#positivement : esperance, bien ?tre, heureux
#n?gativement : ineg_rev
#r?partition des donn?es par variables / 1er regard sur certains individus atypiques
#indicateurs
boxplot(data.qt[,1:8])
# a part pour la variable empreinte il ne semble pas y avoir d'individu atypique
#PIB
boxplot(data.qt[,9])
#On remarque quue certains individus ont un PIB nettement sup?rieur ? la moyenne
#Population
boxplot(data.qt[,10])
#Sur ce graphique il semble y avoir 2 pays qui ont une populations nettement sup?rieur aux autres pays
#On sait dor?navant que pour certaines variables, les individus peuvent avoir des valeurs ab?rrentes, il faudra se m?fier ? ce que cel? n'impacte pas nos analyses
data = data_0[c(8,14:16,18)]
#var 8= index qui passera en quanti sup
#autres vars = R?gion, R?gime politique et libert? sur internet
data = data_0[c(8,14:16,18)]
print(data)
#var 8= index qui passera en quanti sup
#autres vars = R?gion, R?gime politique et libert? sur internet
library(factoextra)
library(FactoMineR)
# Analyse correspondances multiples (ACM)
res.mca <- MCA (data, quanti.sup = 1, graph = TRUE)  #calcul de l'ACM, resultats mis dans une variable
print(res.mca) #Variable resultat contient tous les elements suivants
#p-s valeurs propres avec s = nb de variables
#ici 15 (13-4)
#Visualisation des valeurs propres
eig.val <- get_eigenvalue(res.mca)
eig.val
fviz_eig(res.mca, addlabels = TRUE, ylim = c(0, 50)) #graphique des valeurs propres avec la fonction fviz_eig() ou fviz_screeplot() du package factoextra
#avec coude on garde 1 axe, (1/9 = 0.111 donc 11%), donc il devrait avoir 11 sur chaque axe, dans le 1 on en retrouve 28
#donc c'est beaucoup plus, donc il est bien repr?sentatif
#pour l'axe 2, par rapport ? moyenne, il est au dessus
